services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: videoflix_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  web:
    build: .
    restart: always
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=adminpassword
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DEBUG=True
      - SECRET_KEY=django-insecure-docker-dev-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CSRF_TRUSTED_ORIGINS=http://localhost:4200
      - DB_NAME=videoflix_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_LOCATION=redis://redis:6379/1
      - REDIS_PORT=6379
      - REDIS_DB=0
      - EMAIL_HOST=smtp.example.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_USE_SSL=False
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - media_data:/app/media
      - static_data:/app/staticfiles
    command: python manage.py runserver 0.0.0.0:8000

  worker:
    build: .
    restart: always
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-docker-dev-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_NAME=videoflix_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - media_data:/app/media
    command: python manage.py rqworker default

volumes:
  postgres_data:
  redis_data:
  media_data:
  static_data: