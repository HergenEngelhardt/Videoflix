services:

  db:
    image: postgres:latest
    container_name: videoflix_database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: videoflix_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  maildev:
    image: maildev/maildev:latest
    container_name: videoflix_maildev
    ports:
      - "1080:1080"  
      - "1025:1025"  
    environment:
      - MAILDEV_WEB_PORT=1080
      - MAILDEV_SMTP_PORT=1025

  web:
    build:
      context: .
      dockerfile: backend.Dockerfile
    image: videoflix-backend:latest
    env_file: .env
    container_name: videoflix_backend
    volumes:
      - videoflix_media:/app/media
      - videoflix_static:/app/static
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      maildev:
        condition: service_started
    command: ./backend.entrypoint.sh

  worker:
    build:
      context: .
      dockerfile: backend.Dockerfile
    image: videoflix-backend:latest
    env_file: .env
    container_name: videoflix_worker
    volumes:
      - videoflix_media:/app/media
      - videoflix_static:/app/static
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_started
    command: ./entrypoint.worker.sh




volumes:
  postgres_data:
  redis_data:
  videoflix_media:
  videoflix_static:
